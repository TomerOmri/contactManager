{"version":3,"sources":["Context.js","components/Contact/Contact.js","components/ContactList/ContactList.js","components/EditContact/EditContact.js","components/Header/Header.js","components/ContactForm/ContactForm.js","About.js","NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_React$Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_this2","axios","get","then","res","data","react_default","a","createElement","props","children","Component","Consumer","Contact","onShowClick","showContactInfo","onDeleteClick","delete","onEditClick","className","reactstrap_es","name","onClick","style","cursor","color","float","margin","Link","to","phone","email","ContactList","Fragment","components_Contact_Contact","EditContact","onChange","event","defineProperty","target","onSubmit","_callee","_this$state","updatedContact","regenerator_default","wrap","_context","prev","next","put","sent","t0","history","push","stop","match","params","_this$state2","for","placeholder","size","block","bind","Header","branding","light","expand","href","navbar","defaultProps","ContactForm","newContact","uuid","post","About","NotFound","fluid","App","Context_Provider","HashRouter","basename","process","components_Header_Header","sm","md","offset","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df8207bd.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact =>\n            contact.id == action.payload.id ? action.payload : contact)\n      }\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends React.Component {\n  state = {\n    contacts: [\n\n    ],\n    dispatch: action => this.setState(state => reducer(state, action))\n  };\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/users').then( res => this.setState({contacts: res.data}))\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {\" \"}\n        {this.props.children}{\" \"}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Consumer } from \"../../Context.js\";\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport {\n  ListGroupItem,\n  ListGroupItemHeading,\n  ListGroupItemText\n} from \"reactstrap\";\n\nclass Contact extends Component {\n  constructor() {\n    super();\n    this.state = { showContactInfo: false };\n  }\n\n  onShowClick = () => {\n    this.setState({ showContactInfo: !this.state.showContactInfo });\n  };\n\n  onDeleteClick = (dispatch, id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n        .then( () => { dispatch({ type: \"DELETE_CONTACT\", payload: id }) });\n  };\n  onEditClick = (dispatch, id) => {\n  };\n\n  render() {\n    const { contact } = this.props;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          return (\n            <div className=\"container\">\n              <ListGroupItem>\n                <ListGroupItemHeading>\n                  {contact.name}{\" \"}\n                  <i\n                    onClick={() => {\n                      this.onShowClick();\n                    }}\n                    className=\"fas fa-sort-down\"\n                    style={{ cursor: \"pointer\", color: \"black\" }}\n                  />\n                  <i\n                    className=\"fas fa-times\"\n                    onClick={() => {\n                      this.onDeleteClick(value.dispatch, contact.id);\n                    }}\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"red\", margin: '5px' }}\n                  />\n                  <Link to={`/contact/edit/${contact.id}`} >\n                    <i\n                        className=\"fas fa-edit\"\n                        style={{ cursor: \"pointer\", float: \"right\" , margin: '5px'}}\n                    />\n                  </Link>\n\n                </ListGroupItemHeading>\n              </ListGroupItem>\n              {showContactInfo ? (\n                <div>\n                  {\" \"}\n                  <ListGroupItem>\n                    <ListGroupItemHeading />\n                    <ListGroupItemText>\n                      <ul>\n                        <li>{contact.phone}</li>\n                        <li>{contact.email}</li>\n                      </ul>\n                    </ListGroupItemText>\n                  </ListGroupItem>\n                </div>\n              ) : (\n                <div />\n              )}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"../Contact/Contact.js\";\nimport { ListGroup } from \"reactstrap\";\nimport { Consumer } from \"../../Context.js\";\n\nclass ContactList extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <Consumer>\n        {value => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-3\">Contact List</h1>\n              <ListGroup>\n                {contacts.map(contact => {\n                  return (\n                    <div className=\"container\">\n                      <Contact contact={contact} />\n                    </div>\n                  );\n                })}\n              </ListGroup>\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context.js\";\nimport uuid from \"uuid\";\nimport axios from 'axios';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle,\n    Button,\n    Form,\n    FormGroup,\n    Label,\n    Input,\n    FormText\n} from \"reactstrap\";\n\nclass EditContact extends Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        phone: \"\"\n    };\n\n    async componentDidMount() {\n        const {id} = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n\n        this.setState({name: contact.name, email: contact.email, phone: contact.phone, id: id});\n    }\n\n\n    onChange = event =>\n        this.setState({ [event.target.name]: event.target.value });\n\n    onSubmit  = async (dispatch, event) => {\n        const { name, email, phone, id } = this.state;\n\n        const updatedContact = { id: id, name, email, phone };\n\n        try {\n            const postStatus = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updatedContact);\n            dispatch({ type: \"UPDATE_CONTACT\", payload: updatedContact });\n        } catch (e) {\n            dispatch({ type: \"UPDATE_CONTACT\", payload: updatedContact });\n        }\n\n        this.setState({ name: \"\", email: \"\", phone: \"\" });\n        this.props.history.push('/');\n    };\n\n    render() {\n        const { name, email, phone } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div>\n                            <Card>\n                                <CardBody>\n                                    <CardTitle>Edit Contact</CardTitle>\n                                    <Form>\n                                        <FormGroup>\n                                            <Label for=\"name\">Name</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"name\"\n                                                placeholder=\"Enter name..\"\n                                                value={name}\n                                                onChange={this.onChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"email\">Email</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"email\"\n                                                placeholder=\"Enter Email..\"\n                                                value={email}\n                                                onChange={this.onChange}\n                                            />\n                                        </FormGroup>\n                                        <FormGroup>\n                                            <Label for=\"phone\">Phone</Label>\n                                            <Input\n                                                type=\"text\"\n                                                name=\"phone\"\n                                                placeholder=\"Enter Phone..\"\n                                                value={phone}\n                                                onChange={this.onChange}\n                                            />\n                                        </FormGroup>\n                                        <Button\n                                            color=\"primary\"\n                                            size=\"lg\"\n                                            block\n                                            onClick={this.onSubmit.bind(this, dispatch)}\n                                        >\n                                            Done Editing{\" \"}\n                                        </Button>{\" \"}\n                                    </Form>\n                                </CardBody>\n                            </Card>\n                        </div>\n                    );\n                }}\n            </Consumer>\n        );\n    }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\nimport { Link } from 'react-router-dom';\n\nconst Header = props => {\n  const { branding } = props;\n  return (\n    <div>\n      <Navbar color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">{branding}</NavbarBrand>\n        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\" /> Home</Link>\n\n        <Nav className=\"ml-auto\" navbar>\n          <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\" /> Add Contact</Link>\n          <Link to=\"/about\" className=\"nav-link\">About</Link>\n        </Nav>\n      </Navbar>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"myApp\"\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../Context.js\";\nimport uuid from \"uuid\";\nimport axios from 'axios';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Button,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  FormText\n} from \"reactstrap\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\"\n  };\n\n  onChange = event =>\n    this.setState({ [event.target.name]: event.target.value });\n\n  onSubmit  = async (dispatch, event) => {\n    const { name, email, phone } = this.state;\n\n    const newContact = { id: uuid(), name, email, phone };\n\n    try {\n      const postStatus = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n      dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n    } catch (e) {\n      dispatch({ type: \"ADD_CONTACT\", payload: newContact });\n    }\n\n\n\n\n\n    this.setState({ name: \"\", email: \"\", phone: \"\" });\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { name, email, phone } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return (\n            <div>\n              <Card>\n                <CardBody>\n                  <CardTitle>Add Contact</CardTitle>\n                  <Form>\n                    <FormGroup>\n                      <Label for=\"name\">Name</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder=\"Enter name..\"\n                        value={name}\n                        onChange={this.onChange}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"email\">Email</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Enter Email..\"\n                        value={email}\n                        onChange={this.onChange}\n                      />\n                    </FormGroup>\n                    <FormGroup>\n                      <Label for=\"phone\">Phone</Label>\n                      <Input\n                        type=\"text\"\n                        name=\"phone\"\n                        placeholder=\"Enter Phone..\"\n                        value={phone}\n                        onChange={this.onChange}\n                      />\n                    </FormGroup>\n                    <Button\n                      color=\"primary\"\n                      size=\"lg\"\n                      block\n                      onClick={this.onSubmit.bind(this, dispatch)}\n                    >\n                      Submit{\" \"}\n                    </Button>{\" \"}\n                  </Form>\n                </CardBody>\n              </Card>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\nexport default () => {\n    return (<div>\n        About\n    </div>)\n}","import React from 'react';\nimport { Jumbotron, Container } from 'reactstrap';\n\n\nexport default () => {\n    return ( <div>\n        <Jumbotron fluid>\n            <Container fluid>\n                <h1 className=\"display-3\">:(</h1>\n                <p className=\"lead\">Nothing to see here</p>\n            </Container>\n        </Jumbotron>\n    </div>)\n}","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport \"./App.css\";\nimport ContactList from \"./components/ContactList/ContactList.js\";\nimport EditContact from \"./components/EditContact/EditContact.js\";\nimport Header from \"./components/Header/Header.js\";\nimport { Row, Col } from \"reactstrap\";\nimport { Provider } from \"./Context.js\";\nimport ContactForm from \"./components/ContactForm/ContactForm.js\";\nimport About from './About.js';\nimport NotFound from './NotFound.js';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n          <Router basename={process.env.PUBLIC_URL}>         <div>\n           <Header branding=\"Contact Manager\" />\n           <Row />\n           <div className=\"container\">\n             <Row>\n               <Col sm=\"12\" md={{ size: 6, offset: 3 }}>\n                 <Switch>\n                  <Route exact path=\"/\" component={ContactList}/>\n                  <Route exact path=\"/contact/add\" component={ContactForm}/>\n                  <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                  <Route exact path=\"/about\" component={About}/>\n                  <Route component={NotFound}/>\n                 </Switch>\n               </Col>\n             </Row>\n           </div>\n         </div>\n       </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}